<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sm.dao.PackageMapper">
  <resultMap id="BaseResultMap" type="com.sm.model.Package">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="package_name" jdbcType="VARCHAR" property="packageName" />
    <result column="package_status" jdbcType="INTEGER" property="packageStatus" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="priority" jdbcType="VARCHAR" property="priority" />
    <result column="sale" jdbcType="INTEGER" property="sale" />
    <result column="package_picture" jdbcType="VARCHAR" property="packagePicture" />
    <result column="people_number" jdbcType="INTEGER" property="peopleNumber" />
    <result column="current_stock" jdbcType="INTEGER" property="currentStock" />
    <result column="max_stock" jdbcType="INTEGER" property="maxStock" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="package_category" jdbcType="INTEGER" property="packageCategory" />
    <result column="package_sort" jdbcType="INTEGER" property="packageSort" />
    <result column="opens" jdbcType="INTEGER" property="opens" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sid, package_name, package_status, start_time, end_time, priority, sale, package_picture, 
    people_number, current_stock, max_stock, price, package_category, package_sort, opens
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from package
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from package
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sm.model.Package">
    insert into package (id, sid, package_name, 
      package_status, start_time, end_time, 
      priority, sale, package_picture, 
      people_number, current_stock, max_stock, 
      price, package_category, package_sort, 
      opens)
    values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{packageName,jdbcType=VARCHAR}, 
      #{packageStatus,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{priority,jdbcType=VARCHAR}, #{sale,jdbcType=INTEGER}, #{packagePicture,jdbcType=VARCHAR}, 
      #{peopleNumber,jdbcType=INTEGER}, #{currentStock,jdbcType=INTEGER}, #{maxStock,jdbcType=INTEGER}, 
      #{price,jdbcType=DOUBLE}, #{packageCategory,jdbcType=INTEGER}, #{packageSort,jdbcType=INTEGER}, 
      #{opens,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sm.model.Package">
    <selectKey keyColumn="id" keyProperty="id" resultType="int" order="AFTER">
   		select last_insert_id()
    </selectKey>
    insert into package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="packageName != null">
        package_name,
      </if>
      <if test="packageStatus != null">
        package_status,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="sale != null">
        sale,
      </if>
      <if test="packagePicture != null">
        package_picture,
      </if>
      <if test="peopleNumber != null">
        people_number,
      </if>
      <if test="currentStock != null">
        current_stock,
      </if>
      <if test="maxStock != null">
        max_stock,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="packageCategory != null">
        package_category,
      </if>
      <if test="packageSort != null">
        package_sort,
      </if>
      <if test="opens != null">
        opens,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="packageName != null">
        #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="packageStatus != null">
        #{packageStatus,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=VARCHAR},
      </if>
      <if test="sale != null">
        #{sale,jdbcType=INTEGER},
      </if>
      <if test="packagePicture != null">
        #{packagePicture,jdbcType=VARCHAR},
      </if>
      <if test="peopleNumber != null">
        #{peopleNumber,jdbcType=INTEGER},
      </if>
      <if test="currentStock != null">
        #{currentStock,jdbcType=INTEGER},
      </if>
      <if test="maxStock != null">
        #{maxStock,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="packageCategory != null">
        #{packageCategory,jdbcType=INTEGER},
      </if>
      <if test="packageSort != null">
        #{packageSort,jdbcType=INTEGER},
      </if>
      <if test="opens != null">
        #{opens,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sm.model.Package">
    update package
    <set>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="packageName != null">
        package_name = #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="packageStatus != null">
        package_status = #{packageStatus,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=VARCHAR},
      </if>
      <if test="sale != null">
        sale = #{sale,jdbcType=INTEGER},
      </if>
      <if test="packagePicture != null">
        package_picture = #{packagePicture,jdbcType=VARCHAR},
      </if>
      <if test="peopleNumber != null">
        people_number = #{peopleNumber,jdbcType=INTEGER},
      </if>
      <if test="currentStock != null">
        current_stock = #{currentStock,jdbcType=INTEGER},
      </if>
      <if test="maxStock != null">
        max_stock = #{maxStock,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="packageCategory != null">
        package_category = #{packageCategory,jdbcType=INTEGER},
      </if>
      <if test="packageSort != null">
        package_sort = #{packageSort,jdbcType=INTEGER},
      </if>
      <if test="opens != null">
        opens = #{opens,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sm.model.Package">
    update package
    set sid = #{sid,jdbcType=INTEGER},
      package_name = #{packageName,jdbcType=VARCHAR},
      package_status = #{packageStatus,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      priority = #{priority,jdbcType=VARCHAR},
      sale = #{sale,jdbcType=INTEGER},
      package_picture = #{packagePicture,jdbcType=VARCHAR},
      people_number = #{peopleNumber,jdbcType=INTEGER},
      current_stock = #{currentStock,jdbcType=INTEGER},
      max_stock = #{maxStock,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      package_category = #{packageCategory,jdbcType=INTEGER},
      package_sort = #{packageSort,jdbcType=INTEGER},
      opens = #{opens,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  
  <select id="selectPackageAllBySid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from package
    where sid = #{sid,jdbcType=INTEGER} 
  </select>
  
  <select id="selectBySid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from package
    where sid = #{sid,jdbcType=INTEGER} 
    ORDER BY sale desc
  </select>
  
  <select id="selectByPackageCategory" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	SELECT
	<include refid="Base_Column_List" />
	from package 
	where package_category = #{packageCategory,jdbcType=INTEGER}
	ORDER BY package_sort asc
  </select>
  <select id="selectByPackageCategorySale" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	SELECT
	<include refid="Base_Column_List" />
	from package 
	where package_category = #{packageCategory,jdbcType=INTEGER}
	ORDER BY sale asc
  </select>
  <select id="selectByPackageCategoryStock" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	SELECT
	<include refid="Base_Column_List" />
	from package 
	where package_category = #{packageCategory,jdbcType=INTEGER}
	ORDER BY current_stock asc
  </select>

  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from package
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPackageAll" resultType="java.lang.Integer" >
    select count(*) from package where sid = #{sid,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPackageStatus" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(*) from package where 
    sid = #{sid,jdbcType=INTEGER}
	and package_status = #{packageStatus,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCurrentStock" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(*) from package where
	sid = #{sid,jdbcType=INTEGER} 
	and current_stock = #{currentStock,jdbcType=INTEGER}
  </select>
  
  <select id="selectBySidStatus" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
	<include refid="Base_Column_List" />
	from package where 1=1
	<if test="sid!=null">
	and sid = #{sid,jdbcType=INTEGER}
	</if>
    <if test="packageStatus!=null">
	and package_status = #{packageStatus,jdbcType=INTEGER}
	</if>
	<if test="packageCategory!=null">
	and package_category = #{packageCategory,jdbcType=INTEGER}
	</if>
  </select>
  
  <select id="selectBySidStock" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
	<include refid="Base_Column_List" />
	from package where 1=1
	<if test="sid!=null">
	and sid = #{sid,jdbcType=INTEGER}
	</if>
    <if test="currentStock!=null">
	and current_stock = #{currentStock,jdbcType=INTEGER}
	</if>
	<if test="packageCategory!=null">
	and package_category = #{packageCategory,jdbcType=INTEGER}
	</if>
  </select>
  
  <select id="selectBySidPackageName" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from package where 1=1
    <if test="sid!=null">
	and sid = #{sid,jdbcType=INTEGER}
	</if>
	<if test="packageName!=null">
	and package_name like CONCAT(CONCAT('%', #{packageName,jdbcType=VARCHAR}), '%')
	</if>
  </select>
  
  <select id="selectPackageByOpen" resultMap="BaseResultMap" resultType="java.lang.Integer">
    select 
    <include refid="Base_Column_List" />
    from package where opens = #{opens,jdbcType=INTEGER}
  </select>
  
  <delete id="delectPackageByCategory" parameterType="java.lang.Integer">
    delete from package
    where package_category = #{packageCategory,jdbcType=INTEGER}
  </delete>
  
  
 
</mapper>